// Veja alguns exemplos considerando o documento abaixo na coleção inventory:

use("inventory_two")
{
  _id: 1,
  item: "polarizing_filter",
  tags: ["electronics", "camera"],
}

// ADDTOSET
// Adicionando ao array
db.inventory.updateOne(
  { _id: 1 },
  { $addToSet: { tags: "accessories" } },
);

// resultado
{
  _id: 1,
  item: "polarizing_filter",
  tags: [
    "electronics",
    "camera",
    "accessories",
  ],
}

// ADDTOSET
// Se o valor existir

// A operação abaixo tenta adicionar o elemento “camera” ao array tags. Porém, esse elemento já existe e a operação não surtirá efeito:
db.inventory.updateOne(
  { _id: 1 },
  { $addToSet: { tags: "camera"  } },
);

// Como resultado dessa operação, é retornada uma mensagem dizendo que o MongoDB encontrou um documento com o _id igual a 1, mas não fez nenhuma alteração:
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 0 }

// Com o modificador $each
// Você pode utilizar o operador $addToSet combinado com o modificador $each. Esse modificador permite que você adicione múltiplos valores a um array.

// Veja o seguinte documento da coleção inventory:

{ _id: 2, item: "cable", tags: ["electronics", "supplies"] }

// A operação abaixo utiliza o operador $addToSet e o modificador $each para adicionar alguns elementos a mais no array tags:

db.inventory.updateOne(
  { _id: 2 },
  {
    $addToSet: {
      tags: {
        $each: ["camera", "electronics", "accessories"],
      },
    },
  },
);

// Como resultado, a operação adicionará ao array tags somente os elementos “camera” e “accessories”, uma vez que o elemento “electronics” já existia no array. Veja abaixo:

{
  _id: 2,
  item: "cable",
  tags: ["electronics", "supplies", "camera", "accessories"],
}